<style>

  #locationinfop {
    text-align: center;
    width: 100%;
    font-size: 14px;
    font-weight: 500;
    padding: 8px;
    background-color: #F8F7F1;
    margin-bottom: 8px;
        margin-top: -20px;
  }

  .product__submit__item > .btn {
        padding-top: 16px;
    padding-bottom: 16px;
  }
</style>

<script>

  // A mapping of country codes to flag emojis (using Unicode flag characters)
const countryFlags = {
    'US': 'ğŸ‡ºğŸ‡¸',
    'CA': 'ğŸ‡¨ğŸ‡¦',
    'FR': 'ğŸ‡«ğŸ‡·',
    'NL': 'ğŸ‡³ğŸ‡±',
    'DE': 'ğŸ‡©ğŸ‡ª',
    'GB': 'ğŸ‡¬ğŸ‡§',
    'IT': 'ğŸ‡®ğŸ‡¹',
    'ES': 'ğŸ‡ªğŸ‡¸',
    'CN': 'ğŸ‡¨ğŸ‡³',
    'JP': 'ğŸ‡¯ğŸ‡µ',
    'BR': 'ğŸ‡§ğŸ‡·',
    'IN': 'ğŸ‡®ğŸ‡³',
    'RU': 'ğŸ‡·ğŸ‡º',
    'ZA': 'ğŸ‡¿ğŸ‡¦',
    'AU': 'ğŸ‡¦ğŸ‡º',
    'NZ': 'ğŸ‡³ğŸ‡¿',
    'MX': 'ğŸ‡²ğŸ‡½',
    'AR': 'ğŸ‡¦ğŸ‡·',
    'CL': 'ğŸ‡¨ğŸ‡±',
    'CO': 'ğŸ‡¨ğŸ‡´',
    'PE': 'ğŸ‡µğŸ‡ª',
    'VE': 'ğŸ‡»ğŸ‡ª',
    'EC': 'ğŸ‡ªğŸ‡¨',
    'GT': 'ğŸ‡¬ğŸ‡¹',
    'HN': 'ğŸ‡­ğŸ‡³',
    'SA': 'ğŸ‡¸ğŸ‡¦',
    'AE': 'ğŸ‡¦ğŸ‡ª',
    'TR': 'ğŸ‡¹ğŸ‡·',
    'TH': 'ğŸ‡¹ğŸ‡­',
    'MY': 'ğŸ‡²ğŸ‡¾',
    'SG': 'ğŸ‡¸ğŸ‡¬',
    'ID': 'ğŸ‡®ğŸ‡©',
    'PH': 'ğŸ‡µğŸ‡­',
    'VN': 'ğŸ‡»ğŸ‡³',
    'KR': 'ğŸ‡°ğŸ‡·',
    'KP': 'ğŸ‡°ğŸ‡µ',
    'SE': 'ğŸ‡¸ğŸ‡ª',
    'NO': 'ğŸ‡³ğŸ‡´',
    'FI': 'ğŸ‡«ğŸ‡®',
    'DK': 'ğŸ‡©ğŸ‡°',
    'IS': 'ğŸ‡®ğŸ‡¸',
    'IE': 'ğŸ‡®ğŸ‡ª',
    'CH': 'ğŸ‡¨ğŸ‡­',
    'PT': 'ğŸ‡µğŸ‡¹',
    'BE': 'ğŸ‡§ğŸ‡ª',
    'LU': 'ğŸ‡±ğŸ‡º',
    'PL': 'ğŸ‡µğŸ‡±',
    'CZ': 'ğŸ‡¨ğŸ‡¿',
    'SK': 'ğŸ‡¸ğŸ‡°',
    'HU': 'ğŸ‡­ğŸ‡º',
    'AT': 'ğŸ‡¦ğŸ‡¹',
    'LI': 'ğŸ‡±ğŸ‡®',
    'GR': 'ğŸ‡¬ğŸ‡·',
    'BG': 'ğŸ‡§ğŸ‡¬',
    'RO': 'ğŸ‡·ğŸ‡´',
    'UA': 'ğŸ‡ºğŸ‡¦',
    'BY': 'ğŸ‡§ğŸ‡¾',
    'LT': 'ğŸ‡±ğŸ‡¹',
    'LV': 'ğŸ‡±ğŸ‡»',
    'EE': 'ğŸ‡ªğŸ‡ª',
    'MD': 'ğŸ‡²ğŸ‡©',
    'AM': 'ğŸ‡¦ğŸ‡²',
    'GE': 'ğŸ‡¬ğŸ‡ª',
    'AZ': 'ğŸ‡¦ğŸ‡¿',
    'IR': 'ğŸ‡®ğŸ‡·',
    'IQ': 'ğŸ‡®ğŸ‡¶',
    'SY': 'ğŸ‡¸ğŸ‡¾',
    'LB': 'ğŸ‡±ğŸ‡§',
    'JO': 'ğŸ‡¯ğŸ‡´',
    'IL': 'ğŸ‡®ğŸ‡±',
    'EG': 'ğŸ‡ªğŸ‡¬',
    'MA': 'ğŸ‡²ğŸ‡¦',
    'DZ': 'ğŸ‡©ğŸ‡¿',
    'TN': 'ğŸ‡¹ğŸ‡³',
    'LY': 'ğŸ‡±ğŸ‡¾',
    'GM': 'ğŸ‡¬ğŸ‡²',
    'SN': 'ğŸ‡¸ğŸ‡³',
    'MR': 'ğŸ‡²ğŸ‡·',
    'ML': 'ğŸ‡²ğŸ‡±',
    'GN': 'ğŸ‡¬ğŸ‡³',
    'CI': 'ğŸ‡¨ğŸ‡®',
    'BF': 'ğŸ‡§ğŸ‡«',
    'NE': 'ğŸ‡³ğŸ‡ª',
    'TG': 'ğŸ‡¹ğŸ‡¬',
    'BJ': 'ğŸ‡§ğŸ‡¯',
    'NG': 'ğŸ‡³ğŸ‡¬',
    'CM': 'ğŸ‡¨ğŸ‡²',
    'GA': 'ğŸ‡¬ğŸ‡¦',
    'CG': 'ğŸ‡¨ğŸ‡¬',
    'CD': 'ğŸ‡¨ğŸ‡©',
    'AO': 'ğŸ‡¦ğŸ‡´',
    'GW': 'ğŸ‡¬ğŸ‡¼',
    'SC': 'ğŸ‡¸ğŸ‡¨',
    'SD': 'ğŸ‡¸ğŸ‡©',
    'RW': 'ğŸ‡·ğŸ‡¼',
    'ET': 'ğŸ‡ªğŸ‡¹',
    'SO': 'ğŸ‡¸ğŸ‡´',
    'DJ': 'ğŸ‡©ğŸ‡¯',
    'KE': 'ğŸ‡°ğŸ‡ª',
    'TZ': 'ğŸ‡¹ğŸ‡¿',
    'UG': 'ğŸ‡ºğŸ‡¬',
    'BI': 'ğŸ‡§ğŸ‡®',
    'MZ': 'ğŸ‡²ğŸ‡¿',
    'ZM': 'ğŸ‡¿ğŸ‡²',
    'MW': 'ğŸ‡²ğŸ‡¼',
    'LS': 'ğŸ‡±ğŸ‡¸',
    'BW': 'ğŸ‡§ğŸ‡¼',
    'NA': 'ğŸ‡³ğŸ‡¦',
    'ZA': 'ğŸ‡¿ğŸ‡¦',
    'SZ': 'ğŸ‡¸ğŸ‡¿',
    'HK': 'ğŸ‡­ğŸ‡°',
    'PK': 'ğŸ‡µğŸ‡°'
    // Add more country code mappings here
};

function setLocationInfo(countryCode, countryName) {
    const flagEmoji = countryFlags[countryCode]; // Get the flag emoji using the country code
    const locationInfoP = document.getElementById('locationinfop');
    const locationInfoCart = document.getElementById('locationinfocart');

    // Check if the flagEmoji exists. If it does, prepend it to the message
    const shippingMessage = flagEmoji
        ? `${flagEmoji} | <span>Free delivery to</span> <span style="color: black;font-weight:bold;">${countryName}</span>`
        : `ğŸ“¦ | <span>Free delivery to</span> <span style="color: black;font-weight:bold;">${countryName}</span>`;

    const shippingMessageCart = flagEmoji
        ? `to ${flagEmoji} ${countryCode}`
        : `to ${countryCode}`;

    if (locationInfoP) {
        locationInfoP.innerHTML = shippingMessage;
    }
    if (locationInfoCart) {
        locationInfoCart.innerHTML = shippingMessageCart;
    }
}

// This function fetches the browsing context suggestions and updates the p tag
async function fetchLocationInfo() {
    try {
        const response = await fetch('/browsing_context_suggestions.json');
        const data = await response.json();
        // Use the detected country code and country name from the response
        const countryCode = data.detected_values.country.handle;
        const countryName = data.detected_values.country.name;
        
        // Update the location info p tag with the country name and flag emoji
        setLocationInfo(countryCode, countryName);
    } catch (error) {
        console.error('Error fetching location info:', error);
    }
}

// Call the function to fetch location info on DOM content load
document.addEventListener('DOMContentLoaded', (event) => {
    fetchLocationInfo();
});

document.addEventListener('cart:change', function(event) {
    fetchLocationInfo();
});


</script>